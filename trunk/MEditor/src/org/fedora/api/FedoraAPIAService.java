/*
 * Metadata Editor
 * @author Jiri Kremser
 * 
 * 
 * 
 * Metadata Editor - Rich internet application for editing metadata.
 * Copyright (C) 2011  Jiri Kremser (kremser@mzk.cz)
 * Moravian Library in Brno
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * 
 */

package org.fedora.api;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


// TODO: Auto-generated Javadoc
/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "Fedora-API-A-Service", targetNamespace = "http://www.fedora.info/definitions/1/0/api/", wsdlLocation = "file:/home/freon/kramerius4/fedora-api/src/wsdl/APIA.wsdl")
public class FedoraAPIAService
    extends Service
{

    /** The Constant FEDORAAPIASERVICE_WSDL_LOCATION. */
    private final static URL FEDORAAPIASERVICE_WSDL_LOCATION;
    
    /** The Constant logger. */
    private final static Logger logger = Logger.getLogger(org.fedora.api.FedoraAPIAService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = org.fedora.api.FedoraAPIAService.class.getResource(".");
            url = new URL(baseUrl, "file:/home/freon/kramerius4/fedora-api/src/wsdl/APIA.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'file:/home/freon/kramerius4/fedora-api/src/wsdl/APIA.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        FEDORAAPIASERVICE_WSDL_LOCATION = url;
    }

    /**
     * Instantiates a new fedora apia service.
     *
     * @param wsdlLocation the wsdl location
     * @param serviceName the service name
     */
    public FedoraAPIAService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * Instantiates a new fedora apia service.
     */
    public FedoraAPIAService() {
        super(FEDORAAPIASERVICE_WSDL_LOCATION, new QName("http://www.fedora.info/definitions/1/0/api/", "Fedora-API-A-Service"));
    }

    /**
     * Gets the fedora apia service http port.
     *
     * @return the fedora apia service http port
     * returns FedoraAPIA
     */
    @WebEndpoint(name = "Fedora-API-A-Service-HTTP-Port")
    public FedoraAPIA getFedoraAPIAServiceHTTPPort() {
        return super.getPort(new QName("http://www.fedora.info/definitions/1/0/api/", "Fedora-API-A-Service-HTTP-Port"), FedoraAPIA.class);
    }

    /**
     * Gets the fedora apia service http port.
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return the fedora apia service http port
     * returns FedoraAPIA
     */
    @WebEndpoint(name = "Fedora-API-A-Service-HTTP-Port")
    public FedoraAPIA getFedoraAPIAServiceHTTPPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.fedora.info/definitions/1/0/api/", "Fedora-API-A-Service-HTTP-Port"), FedoraAPIA.class, features);
    }

}
